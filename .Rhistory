library(roxygen2)
library(roxygen2)
roxygenize()
q()
library(giraffe)
repo <- read_sample_repo()
library(git2r)
repo <- read_sample_repo()
q()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
library(giraffe)
read_sample_repo()
path.package("giraffe")
paste0(path.package("giraffe"),"/extdata")
paste0(path.package("giraffe"),"/extdata/repo")
repository(paste0(path.package("giraffe"),"/extdata/repo"))
library(git2r)
repository(paste0(path.package("giraffe"),"/extdata/repo"))
repository(paste0(path.package("giraffe"),"/extdata/repo/"))
repository(paste0(path.package("giraffe"),"/extdata/repo/repo.git"))
repository(paste0(path.package("giraffe"),"/extdata/repo/.git"))
repository(paste0(path.package("giraffe"),"/extdata/repo/.git"))q()
q()
getwd()
repository("inst/extdata/repo/")
library(git2r)
repository("inst/extdata/repo/")
save(repository("inst/extdata/repo/"), "data/repo")
save(repository("inst/extdata/repo/"), "data/repo.rda")
save(repository("inst/extdata/repo/"), file="data/repo.rda")
save(repo <- repository("inst/extdata/repo/"), file="data/repo.rda")
repo <- repository("inst/extdata/repo/")
save(repo, file="data/repo.rda")
bundle_r_package(repo = repo)
bundle_r_packag
repository("inst/extdata/repo.git/")
library(giraffe)
read_sample_repo()
make_tables(read_sample_repo())
repo
summary(repo)
repo(read_sample_repo())
repo <- read_sample_repo()
summary(repo)
commits(repo = repo)
get_blobs(repo=repo, path = "test.csv")
library(git2r)
get_blobs(repo=repo, path = "test.csv")
get_blobs()
git2r::get_blobs()
git2r::get_blobs()
git2r:::get_blobs()
giraffe::get_blobs()
giraffe:::get_blobs()
giraffe:::get_blobs(repo = repo, path = "test.csv")
giraffe:::get_blobs(repo = repo, path = "test.csv")[[1]]
names(giraffe:::get_blobs(repo = repo, path = "test.csv")[[1]])
giraffe:::get_blobs(repo = repo, path = "test.csv")[[1]]
name(giraffe:::get_blobs(repo = repo, path = "test.csv")[[1]])
library(giraffe)
make_tables(read_sample_repo(), test.csv)
make_tables(read_sample_repo(), "test.csv")
help(daff)
??daff
library(daff)
??render_diff
make_tables(repo = repo, path = "test.csv")
make_tables(repo = repo, path = "test.csv")
detach(giraffe)
detach(name = "giraffe")
library(giraffe)
make_tables()
make_tables(repo = repo, path = "test.csv")
library(giraffe)
make_tables(repo = repo, path = "test.csv")
library(giraffe)
make_tables(repo = repo, path = "test.csv")
a
q()
library(giraffe)
make_tables(repo = repo, path = "test.csv")
make_tables(repo = read_sample_repo(), path = "test.csv")
a
make_tables(repo = read_sample_repo(), path = "test.csv")
make_tables(repo = read_sample_repo(), path = "test.csv")
library(git2r)
make_tables(repo = read_sample_repo(), path = "test.csv")
library(daff)
make_tables(repo = read_sample_repo(), path = "test.csv")
make_tables(repo = read_sample_repo(), path = "test.csv")
c(1,2,3)
lapply(c(1,2,3), tempfile())
lapply(c(1,2,3), function(x){tempfile()})
make_tables(repo = read_sample_repo(), path = "test.csv")
library(giraffe)
read_sample_repo()
make_tables(read_sample_repo(), "test.csv")
library(git2r)
library(daff)
repo <- read_sample_repo()
path <- "test.csv"
dfs
file_seq
file_names
file_names[1]
file_names[[1]]
make_tables(repo, path)
make_tables(repo, path)
make_tables(repo, path)
dfs
get_blobs(repo, path)
odb_blobs(repo)
i
files
blobs
make_tables(repo, path)
make_tables(repo, path)
make_tables(repo, path)
??View
q()
n
library(giraffe)
read_sample_repo()
repo <- read_sample_repo()
path <-  "test.csv"
get_blobs(repo, path)
library(git2r)
library(daff)
library(xtable)
get_blobs(repo, path)
content(get_blobs(repo, path)[[1]])
read.csv2(textConnection(content(get_blobs(repo, path)[[1]])))
print(xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]])))), type = "html")
library(xtable)
print(xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]])))), type = "html")
print(xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]])))), type = "html", file = "example.html")
xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]]))))
xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]]))), type = "html")
a <- print(xtable(read.csv2(textConnection(content(get_blobs(repo, path)[[1]])))), type = "html")
a
make_tables(repo, path)
make_tables(repo, path)
a <- make_tables(repo, path)
a <- make_tables(repo, path)
length(a)
l1
l2
make_tables(repo, path)
a <- make_tables(repo, path)
a[1]
c(l1h, l2h, l3h, a[1], l5h)
paste0(l1h, l2h, l3h, a[1], l5h)
render_tables(repo, path)
a <- render_tables(repo, path)
a[5]
}
seq_along(tabs)
i <- 1
length(tabs)
a <- render_tables(repo, path)
a[2]
a <- render_tables(repo, path)
a[2]
a <- render_tables(repo, path)
a <- render_tables(repo, path)
a[2]
seq_len(length(tabs)-2)+1)
seq_len(length(tabs)-2)+1
a <- readLines("inst/extdata/header.html")
a
header <- a
header
save(header, "data/header.rda")
save(header, file="data/header.rda")
library(roxygen2)
roxygenize()
roxygenize()
library(giraffe)
render_tables(repo = read_sample_repo(), path = "test.csv")
repo <- read_sample_repo()
path <- "test.csv"
make_tables(repo, path)
a <- make_tables(repo, path)
a[1]
data(header.html)
library(giraffe)
data(header)
header
library(giraffe)
render_tables(repo = read_sample_repo(), path = "test.csv")
tabs
tab_definitions
tab_definitions
tab_definitions
result
library(git2r)
library(daff)
library(xtable)
library(giraffe)
a <- render_tables(read_sample_repo(), "test.csv")
repo <- read_sample_repo()
a <- render_tables(repo, "test.csv")
a <- render_tables(repo, "test.csv")
path = "test.csv"
file_seq
library(giraffe)
writeLines(render_tables(repo, path), file = "temp.html")
writeLines(render_tables(repo, path), "temp.html")
writeLines(render_tables(repo, path), "temp.html")
library(giraffe)
writeLines(render_tables(repo, path), "temp.html")
q()
library(giraffe)
path = "test.csv"
repo <- read_sample_repo()
writeLines(render_tables(repo, path), "temp.html")
viewer(writeLines(render_tables(repo, path), "temp.html"))
Viewer(writeLines(render_tables(repo, path), "temp.html"))
utils::browseURL(writeLines(render_tables(repo, path), "temp.html"))
utils::browseURL(render_tables(repo, path), "temp.html")
writeLines(render_tables(repo, path), "temp.html")
utils::browseURL("temp.html")
utils::browseURL("temp.html")
library(giraffe)
library(giraffe)
repo <- read_sample_repo()
path <- "test.csv"
writeLines(render_tables(repo, path), temp.html)
writeLines(render_tables(repo, path), "temp.html")
repo <- read_sample_repo()
library(giraffe)
repo <- read_sample_repo()
path <- "test.csv"
data(cars)
cars2 <- cars
cars2[5,2] <- 23
library(daff)
render_diff(diff_data(cars, cars2))
library(giraffe)
repo <- read_sample_repo()
path <- "test.csv"
writeLines(render_tables(repo, path), "temp.html")
getwd()
q()
repo <- read_sample_repo()
library(giraffe)
repo <- read_sample_repo()
path <- "test.csv"
writeLines(render_tables(repo, path), "temp.html")
q()
